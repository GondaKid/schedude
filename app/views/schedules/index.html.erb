<div class="container-contact2">
  <div class="row justify-content-center mb-3">
      <%= link_to root_path do %>
      <%= image_tag  "logo.svg", height: '65', width: '213', :class => "img-icons" %>
      <% end %>
  </div>
  <div class="row">
    <div class="mx-auto d-flex flex-column">
      <div class="mx-auto mb-3">
        <h4 class="text-center">Thời Khóa biểu của <strong><%= @student.student_id%></strong></h4>
      </div>
    </div>
  </div>
      <div class="row">
        <div class="table-responsive">
            <table class="table table-hover table-bordered table-sm">
                <thead align="center">
                    <tr class="table-primary">
                      <th scope="col"></th>
                      <% @week.each do |w| %>
                      <th scope="col"><%= w %></th>
                      <% end %>
                    </tr>
                </thead>
                <tbody align="center">
                    <% (1..10).each do |t| %>
                    <tr>
                      <td><%= t %></td>
                      <% @week.each do |on| %>
                        <% subject = @sche.detect { |s| s.on == on and s.range === t } %>
                        <% if not subject.nil? %>
                          <td><%= subject.name %></td>
                        <% else %>
                          <td></td>
                        <% end %>
                      <% end %>
                    </tr>
                    <% end %>
                </tbody>
            </table>
        </div>
    </div>
  <div class="text-center mt-3">
    <%= link_to 'Quay lại trang chủ', root_path %>
  </div>
</div>

<script type="text/javascript">
function mergeDuplicateRows() {
  const previousRow = {};
  const colsChanged = {};

  Array.from(document.querySelectorAll('tbody tr')).forEach((tr, rowIdx) => {
    Array.from(tr.children).forEach((td, colIdx) => {
      if (rowIdx > 0 && previousRow[colIdx].text === td.innerText) {
        previousRow[colIdx].elem.setAttribute('rowspan', ++previousRow[colIdx].span);
        colsChanged[colIdx] = false;
        td.remove();
      } else {
        previousRow[colIdx] = { span: 1, text: td.innerText, elem: td};
        colsChanged[colIdx] = true;
      }
    });
  });
}
mergeDuplicateRows();
</script>